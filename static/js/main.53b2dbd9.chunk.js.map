{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","shuffleCard","id","alt","name","src","image","realname","actor","Wrapper","children","Title","href","message","score","topscore","App","state","friends","_this","map","friend","clicked","setState","initial","sort","Math","random","_this2","this","components_Wrapper","components_Title","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.53b2dbd9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.shuffleCard(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Real Name:</strong> {props.realname}\n          </li>\n          <li>\n            <strong>Actor:</strong> {props.actor}\n          </li>\n        </ul>\n      </div>\n      {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        ùòÖ\n      </span> */}\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}\n  <footer className=\"footer\">\n    <div className=\"bottom bg-dark\">\n      Clicky Game!\n    </div>\n  </footer>\n  </div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <div className=\"title\">\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">{props.children}</a>\n      <span className=\"navbar-brand mb-0 h1 message\">{props.message}</span>\n      <span className=\"navbar-brand mb-0 h1 score\">Score: {props.score} | Top Score: {props.topscore}</span>\n    </nav>\n    <div className=\"instructions\">\n      <p><strong>Clicky Game!</strong></p>\n      <p className=\"mss\">Click on an image to earn points, but don't click on any more than once!</p>\n    </div>\n  </div>\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    topscore: 0,\n    message : \"Game Start!!!\"\n  };\n\n  shuffleCard = id => {\n    const friends = this.state.friends.map(friend => {\n\n      if (friend.id === id) {\n        //increase score by 1 if not matched\n        // console.log(friend.name + \" \" + friend.clicked)\n        if (friend.clicked === false) {\n          // console.log(friend.name + \" \" + friend.clicked)\n          this.setState({ \n            score: this.state.score + 1,\n            message: \"You guessed correctly!\"\n          });\n          \n          if (this.state.score >= this.state.topscore){\n          this.setState({ topscore: this.state.topscore + 1});\n          }\n          // console.log(friend.name)\n          //change the boolean clicked to true if had clicked\n          friend.clicked = true;\n        } else {\n          //You loss if click the same image\n          // alert(\"You loss\")\n          const initial = this.state.friends.map(friend => {\n            friend.clicked = false;\n            return friend;\n          })\n          this.setState({\n            initial,\n            score: 0,\n            message: \"You guessed incorrectly!\"\n          });\n        }\n      }\n\n      // console.log(friend)\n      return friend\n    })\n    //randomly shuffle friends \n    friends.sort(() => 0.5 - Math.random())\n    this.setState({ friends });\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title\n          score={this.state.score}\n          topscore={this.state.topscore}\n          shuffleCard={this.shuffleCard}\n          message={this.state.message}\n        >Clicky Game</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            shuffleCard={this.shuffleCard}\n            id={friend.id}\n            clicked={friend.clicked}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            realname={friend.realname}\n            actor={friend.actor}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}